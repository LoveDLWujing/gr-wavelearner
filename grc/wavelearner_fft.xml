<?xml version="1.0"?>
<block>
  <name>FFT</name>
  <key>wavelearner_fft</key>
  <category>[Wavelearner]</category>
  <import>import wavelearner</import>
  <make>wavelearner.fft($vlen, $fft_size, $direction)</make>

  <param>
    <name>Vector Length</name>
    <key>vlen</key>
    <value>131072</value>
    <type>int</type>
  </param>
  <param>
    <name>FFT Size</name>
    <key>fft_size</key>
    <value>1024</value>
    <type>int</type>
  </param>
  <param>
    <name>Direction</name>
    <key>direction</key>
    <type>enum</type>
    <option>
      <name>Forward</name>
      <key>True</key>
    </option>
    <option>
      <name>Inverse</name>
      <key>False</key>
    </option>
  </param>

  <check>$vlen &gt; 0</check>
  <check>$fft_size &gt; 0</check>
  <check>$vlen &gt;= $fft_size</check>
  <check>($vlen % $fft_size) == 0</check>

  <sink>
    <name>in</name>
    <type>complex</type>
    <vlen>$vlen</vlen>
  </sink>

  <source>
    <name>out</name>
    <type>complex</type>
    <vlen>$vlen</vlen>
  </source>

  <doc>
Block that computes a FFT or IFFT using GPU acceleration.
  Args:
    vlen: Length of the input vector in samples. This is how many samples the GPU processes each time the FFT is executed. Note that this number is not necessarily the FFT size. That is, if this number is larger than the FFT size, then many smaller FFTs are batched together (i.e., computed in parallel). As a result, this number must be larger than or equal to the FFT size, and also must be a multiple of FFT size.
    fft_size: Size of the FFT in samples. See "vlen" for a discussion on how these variables are related.
    direction: Variable that determines whether this is a FFT or IFFT.
  </doc>
</block>
